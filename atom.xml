<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>墨说有话</title>
  
  <subtitle>折腾爱好者 / 重度社恐</subtitle>
  <link href="http://chenzp.top/atom.xml" rel="self"/>
  
  <link href="http://chenzp.top/"/>
  <updated>2023-04-10T18:21:57.570Z</updated>
  <id>http://chenzp.top/</id>
  
  <author>
    <name>墨大先生</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>轻松搭建博客评论组件Gitalk</title>
    <link href="http://chenzp.top/2023/04/10/%E8%BD%BB%E6%9D%BE%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E7%BB%84%E4%BB%B6Gitalk/"/>
    <id>http://chenzp.top/2023/04/10/%E8%BD%BB%E6%9D%BE%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E7%BB%84%E4%BB%B6Gitalk/</id>
    <published>2023-04-10T14:20:33.000Z</published>
    <updated>2023-04-10T18:21:57.570Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><blockquote><p>Gitalk评论组件，用过都说好！！</p></blockquote><br><p>最近想给博客加个评论功能，被朋友推荐提到最多的就是Gitalk评论组件。它无需自建数据库，而且支持Github登录，非常适合轻量级网站应用。<br>虽说组件很赞，但对于我这种技术小白来说还是研究了一晚上才终于成功部署。<br>于是我决定把详细的安装过程以及注意事项整理分享出来，希望能帮到和我一样有需要的朋友。</p><p>安装好的Gitalk界面长这样👇<br><br></p><center><img src="20230410_01_img-001.webp"></img></center>接下来，让我们开始为自己的博客添加Gitalk组件。💪<br><br><h4 id="创建评论仓库repo"><a href="#创建评论仓库repo" class="headerlink" title="创建评论仓库repo"></a>创建评论仓库repo</h4><p>我们需要一个容器来存放Gitalk生成的评论数据，可以在<a href="https://github.com/">Github</a>上创建一个存放评论的空仓库，我们就叫它<code>gitalk-comments</code>。<br><br></p><center><img src="20230410_01_img-002.webp"></img></center><br>已经创建完的空仓库：<br><center><img src="20230410_01_img-003.webp"></img></center><br><br><h4 id="创建OAuth-application"><a href="#创建OAuth-application" class="headerlink" title="创建OAuth application"></a>创建OAuth application</h4><p>接下来，我们需要在Github上<a href="https://github.com/settings/profile">创建一个属于我们自己的Gitalk应用</a>。</p><p>点击右上角用户头像，在菜单中点击“Settings”，进入设置页面。</p><center><img src="20230410_01_img-004.webp"></img></center><br><p>在设置页面中，点击左侧列表最底部<code>Developer settings</code>。<br><br></p><center><img src="20230410_01_img-005.webp"></img></center><br>进入创建OAuth application页面。<br><center><img src="20230410_01_img-006.webp"></img></center><br><h5 id="注意："><a href="#注意：" class="headerlink" title="注意："></a><font style="color:#FF0000;">注意：</font></h5><p>这里的<code>Homepage URL</code>与<code>Authorization callback URL</code>要填写自己博客的域名。<br><br><br>点击“Register application”注册之后，我们会跳转到详细配置页面。<br><br></p><center><img src="20230410_01_img-007.webp"></img></center><p>我们还需要创建这个<code>clientSecret</code>密钥，点击“Generate a new client secret”即可创建。<br>记录下这里的<code>client ID</code>以及<code>client Secret</code>。<br><br></p><h4 id="安装Gitalk"><a href="#安装Gitalk" class="headerlink" title="安装Gitalk"></a>安装Gitalk</h4><p>运行终端，打开Blog文件根目录。比如我的Blog文件在<code>E:\blog</code>，那么在终端输入如下指令：</p><pre class="line-numbers language-none"><code class="language-none">cd E:\blog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后输入npm指令安装Gitalk：</p><pre class="line-numbers language-none"><code class="language-none">npm i --save gitalk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><h4 id="配置Gitalk"><a href="#配置Gitalk" class="headerlink" title="配置Gitalk"></a>配置Gitalk</h4><p>在Blog的首页文件<code>index.html</code>的<code>&lt;head&gt;&lt;/head&gt;</code>标签之间引入Gitalk：</p><pre class="line-numbers language-none"><code class="language-none">&lt;head&gt;&lt;!--引入Gitalk--&gt;&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;gitalk&#x2F;dist&#x2F;gitalk.css&quot;&gt;&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;gitalk&#x2F;dist&#x2F;gitalk.min.js&quot;&gt;&lt;&#x2F;script&gt;&lt;&#x2F;head&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在<code>index.html</code>的<code>&lt;body&gt;&lt;/body&gt;</code>标签之间创建一个容器用于存放Gitalk：</p><pre class="line-numbers language-none"><code class="language-none">&lt;div id&#x3D;&quot;gitalk-container&quot;&gt;&lt;&#x2F;div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加如下参数，声明变量<code>gitalk</code>:</p><pre class="line-numbers language-none"><code class="language-none">var gitalk &#x3D; new Gitalk(&#123;    clientID: &#39;填入刚创建OAuth的client ID&#39;,    clientSecret: &#39;填入刚创建OAuth的client Secret&#39;,    repo: &#39;填入评论仓库的repo名称&#39;,    owner: &#39;填入你的Github用户名&#39;,    admin:  [&#39;填入你的Github用户名&#39;],    id: location.pathname,      &#x2F;&#x2F; 这个不要改    language:&#39;zh-CN&#39;, &#x2F;&#x2F; 设置界面语言为中文，如需英文改为&#39;en&#39;    distractionFreeMode: false  &#x2F;&#x2F; 这是评述输入框聚焦模式，默认关闭，如需开启改成&#39;true&#39;&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在以上参数中分别填入刚刚创建好的OAuth application信息。</p><h5 id="注意：-1"><a href="#注意：-1" class="headerlink" title="注意："></a><font style="color:#FF0000;">注意：</font></h5><p>这里<code>repo</code>的名称只需填入创建仓库时填写的名称，无需添加<code>.github.io</code>等后缀。<br><br></p><p>在参数代码后添加render，以渲染<code>index.html</code>页面中的评论组件界面：</p><pre class="line-numbers language-none"><code class="language-none">gitalk.render(&#39;gitalk-container&#39;)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><p>以上配置完成后，即可重新部署Blog页面，快去看看效果吧~<br><br><br><br></p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;
&lt;p&gt;从此你不再是一个人孤独寂寞冷~&lt;/p&gt;
&lt;!-- more --&gt;</summary>
    
    
    
    
    <category term="博客" scheme="http://chenzp.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="瞎折腾" scheme="http://chenzp.top/tags/%E7%9E%8E%E6%8A%98%E8%85%BE/"/>
    
  </entry>
  
  <entry>
    <title>Stable Diffusion 本地部署安装指南</title>
    <link href="http://chenzp.top/2023/04/09/stable-diffusion%E5%AE%8C%E5%85%A8%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/"/>
    <id>http://chenzp.top/2023/04/09/stable-diffusion%E5%AE%8C%E5%85%A8%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/</id>
    <published>2023-04-08T16:00:00.000Z</published>
    <updated>2023-04-10T18:20:54.294Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><br><blockquote><p>电脑显卡不是NVIDIA的道友可以直接放弃了。<br>最低4GB显存能跑，但生图效率感人，请酌情安装。</p></blockquote><br><br><ul><li><a href="#%E5%89%8D%E8%A8%80">前言</a><ul><li><a href="#%E4%BB%80%E4%B9%88%E6%98%AFStable-Diffusion%EF%BC%9F">什么是Stable Diffusion？</a></li><li><a href="#%E7%94%A8Stable-Diffusion%E8%83%BD%E5%81%9A%E4%BB%80%E4%B9%88%EF%BC%9F">用Stable Diffusion能做什么？</a></li><li><a href="#Stable-Diffusion%E7%9B%B8%E6%AF%94%E5%85%B6%E4%BB%96AI%E7%94%9F%E5%9B%BE%E5%BA%94%E7%94%A8%E7%9A%84%E4%BC%98%E5%8A%BF%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F">Stable Diffusion相比其他AI生图应用的优势是什么？</a></li><li><a href="#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8Stable-Diffusion%EF%BC%9F">为什么要学习使用Stable Diffusion？</a></li><li><a href="#Stable-Diffusion%E5%8F%AF%E8%BF%90%E8%A1%8C%E6%9C%80%E4%BD%8E%E9%85%8D%E7%BD%AE">Stable Diffusion可运行最低配置</a></li><li><a href="#%E5%AE%89%E8%A3%85%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9">安装注意事项</a></li></ul></li><li><a href="#%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE">环境配置</a><ul><li><a href="#1-Anaconda">1. Anaconda</a><ul><li><a href="#1-1-Anaconda%E5%AE%89%E8%A3%85">1.1 Anaconda安装</a></li><li><a href="#1-2-Anaconda%E9%85%8D%E7%BD%AE">1.2 Anaconda配置</a></li></ul></li><li><a href="#2-Python">2. Python</a><ul><li><a href="#2-1-%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85">2.1 下载安装</a></li><li><a href="#2-2-Windows-PowerShell%E8%AE%BE%E7%BD%AE">2.2 Windows PowerShell设置</a></li></ul></li><li><a href="#3-Git">3. Git</a></li></ul></li><li><a href="#%E9%83%A8%E7%BD%B2%E5%BA%94%E7%94%A8">部署应用</a><ul><li><a href="#1-%E4%B8%8B%E8%BD%BDStable-Diffusion">1. 下载Stable Diffusion</a></li><li><a href="#2-%E6%A3%80%E6%9F%A5webui-user-bat">2. 检查webui-user.bat</a></li><li><a href="#3-%E5%AE%89%E8%A3%85Stable-Diffusion">3. 安装Stable Diffusion</a></li></ul></li><li><a href="#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98">常见问题</a><ul><li><a href="#1-pip%E9%97%AE%E9%A2%98%E5%8F%8A%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95">1. pip问题及处理方法</a></li><li><a href="#2-%E6%8A%A5%E9%94%99%EF%BC%9ACouldn%E2%80%99t-install-gfpgan">2. 报错：Couldn’t install gfpgan</a></li><li><a href="#3-%E6%8A%A5%E9%94%99%EF%BC%9ANo-module-%E2%80%98xformers%E2%80%99-Proceeding-without-it">3. 报错：No module ‘xformers’. Proceeding without it.</a></li><li><a href="#4-%E6%8A%A5%E9%94%99%EF%BC%9Amodulenotfounderror">4. 报错：modulenotfounderror</a></li></ul></li><li><a href="#%E8%A6%81%E7%82%B9%E6%80%BB%E7%BB%93">要点总结</a><ul><li><a href="#%E5%85%B3%E4%BA%8E%E5%AE%89%E8%A3%85Stable-Diffusion">关于安装Stable Diffusion</a></li><li><a href="#%E8%B5%84%E6%BA%90%E9%93%BE%E6%8E%A5">资源链接</a><br><br></li></ul></li></ul><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a><font style="color:#0099ff;">前言</font></h3><h5 id="什么是Stable-Diffusion？"><a href="#什么是Stable-Diffusion？" class="headerlink" title="什么是Stable Diffusion？"></a>什么是Stable Diffusion？</h5><p>Stable Diffusion是一个文本到图像的潜在扩散模型，由CompVis、Stability AI和LAION的研究人员和工程师创建。它使用来自LAION-5B数据库子集的512x512图像进行训练。使用这个模型，可以生成包括人脸在内的任何图像。因为有大量开源的预训练模型，所以我们也可以在自己的机器上运行它。<br>官网介绍：<a href="https://stability.ai/blog/stable-diffusion-public-release">https://stability.ai/blog/stable-diffusion-public-release</a></p><h5 id="用Stable-Diffusion能做什么？"><a href="#用Stable-Diffusion能做什么？" class="headerlink" title="用Stable Diffusion能做什么？"></a>用Stable Diffusion能做什么？</h5><p>它的主要功能是使用文本描述、现有图片或指定训练模型产生新的图像。</p><h5 id="Stable-Diffusion相比其他AI生图应用的优势是什么？"><a href="#Stable-Diffusion相比其他AI生图应用的优势是什么？" class="headerlink" title="Stable Diffusion相比其他AI生图应用的优势是什么？"></a>Stable Diffusion相比其他AI生图应用的优势是什么？</h5><ul><li>有大量开源模型，可本地部署运行，无需额外付费。</li><li>训练模型参数、精度可深度控制，定制生图所见即所得。</li><li>丰富的应用插件，可拓展性强。</li></ul><h5 id="为什么要学习使用Stable-Diffusion？"><a href="#为什么要学习使用Stable-Diffusion？" class="headerlink" title="为什么要学习使用Stable Diffusion？"></a>为什么要学习使用Stable Diffusion？</h5><ul><li>AI作为未来重要且高效的生产力工具，我们必须掌握如何使用它。</li><li>“xxx从业者即将失业”、“AI即将取代人类工作”等论调甚嚣尘上，通过学习破除焦虑心态。</li></ul><h5 id="Stable-Diffusion可运行最低配置"><a href="#Stable-Diffusion可运行最低配置" class="headerlink" title="Stable Diffusion可运行最低配置"></a>Stable Diffusion可运行最低配置</h5><p>操作系统：Windows、MacOS 或 Linux<br>显卡：Nvidia RTX 2050 以上<br>VRAM显存：4GB<br>硬盘空间：12GB以上</p><h5 id="安装注意事项"><a href="#安装注意事项" class="headerlink" title="安装注意事项"></a><font style="color:#FF0000;">安装注意事项</font></h5><ul><li><font style="color:#FF0000;">需要具备科学上网条件，大多数资源安装会用到。</font></li><li><font style="color:#FF0000;">在Stable Diffusion部署过程中所有软件安装的路径严禁出现中文、空格。</font></li><li><font style="color:#FF0000;">电脑的用户名不能有中文。</font><br><br><br></li></ul><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a><font style="color:#0099ff;">环境配置</font></h3><h5 id="1-Anaconda"><a href="#1-Anaconda" class="headerlink" title="1. Anaconda"></a>1. Anaconda</h5><p>Anaconda是一个运行python的环境管理工具。</p><h6 id="1-1-Anaconda安装"><a href="#1-1-Anaconda安装" class="headerlink" title="1.1 Anaconda安装"></a>1.1 Anaconda安装</h6><p>官网下载链接<a href="https://www.anaconda.com/products/distribution">https://www.anaconda.com/products/distribution</a>。<br>点击“Download”下载，打开文件一路“Next”到这个界面，勾上第一个选项，把该命令注册到环境变量。<br><br></p><center><img src="20230409_01_img-001.webp"></img></center><br>点击“Install”开始安装。安装完成后，点击“开始”菜单，可在“最近添加”里看到Anaconda Prompt，建议右键“更多-以管理员身份运行”。<br><center><img src="20230409_01_img-002.webp"></img></center><br><h6 id="1-2-Anaconda配置"><a href="#1-2-Anaconda配置" class="headerlink" title="1.2 Anaconda配置"></a>1.2 Anaconda配置</h6><p>后续需要下载Python包运行生成环境，如果Python下载失败或速度较慢，建议替换下载源。<br>替换下载源方法如下：<br>运行Anaconda Prompt，在打开的窗口输入以下命令进行全局配置。</p><pre class="line-numbers language-none"><code class="language-none">pip config set global.index-url https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>打开“此电脑”，进入<code> C:\Users\&lt;电脑用户名&gt;</code>这个路径，可以看到<code>.condarc</code>文件。<br>打开它，我这里用的是Sublime Text，用记事本也行。<br>复制以下内容进去，然后保存文件。</p><pre class="line-numbers language-none"><code class="language-none">default_channels:  - https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;main  - https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;r  - https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;msys2custom_channels:  conda-forge: https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloud  msys2: https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloud  bioconda: https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloud  menpo: https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloud  pytorch: https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloud  pytorch-lts: https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloud  simpleitk: https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloudshow_channel_urls: truessl_verify: false<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><h5 id="2-Python"><a href="#2-Python" class="headerlink" title="2. Python"></a>2. Python</h5><h6 id="2-1-下载安装"><a href="#2-1-下载安装" class="headerlink" title="2.1 下载安装"></a>2.1 下载安装</h6><p>Python官网下载链接<a href="https://www.python.org/downloads/release/python-3106/">https://www.python.org/downloads/release/python-3106/</a>。<br>完成下载后运行安装程序，安装界面中“Add Python3.10 to PATH”（将Python加入环境变量）前面要打勾 ，然后直接安装。<br><br></p><center><img src="20230409_01_img-003.webp"></img></center><br><h6 id="2-2-Windows-PowerShell设置"><a href="#2-2-Windows-PowerShell设置" class="headerlink" title="2.2 Windows PowerShell设置"></a>2.2 Windows PowerShell设置</h6><p>右键Windows菜单图标打开Windows PowerShell(管理员模式)，输入如下命令：<br><code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned</code><br>出现下面选择栏按[A]回车。<br><br></p><center><img src="20230409_01_img-004.webp"></img></center><br><p><font style="color:#FF0000;">注意：</font></p><ul><li><font style="color:#FF0000;">建议下载Python版本为3.10.6，较新的版本可能会在后续过程中出现因找不到匹配资源报错而无法完成部署，所以这里需要下载的版本不是越新越好。</font></li><li><font style="color:#FF0000;">如安装过程中忘记勾选“Add Python3.10 to PATH”可参考如下操作<a href="https://zhuanlan.zhihu.com/p/263000046">将Python加入环境变量</a>。</font></li></ul><br><br><h5 id="3-Git"><a href="#3-Git" class="headerlink" title="3. Git"></a>3. Git</h5><p>进入Git下载链接，<a href="https://git-scm.com/downloads%E3%80%82">https://git-scm.com/downloads。</a><br>点击“Download for Windows”，下载完成后一路默认下一步，完成安装即可。<br><br><br><br></p><h3 id="部署应用"><a href="#部署应用" class="headerlink" title="部署应用"></a><font style="color:#0099ff;">部署应用</font></h3><h5 id="1-下载Stable-Diffusion"><a href="#1-下载Stable-Diffusion" class="headerlink" title="1. 下载Stable Diffusion"></a>1. 下载Stable Diffusion</h5><p>运行Anaconda Prompt窗口，进入到你想要进入的目录（注意文件路径不要有中文）。<br>刚进来的目录是<code>C:\Windows\system32</code>，比如我这里想要放置的目录是<code>D:\git_pro</code>，则依次输入以下命令：<br><code>cd ../..</code><br><code>cd D:</code><br><code>cd git_pro</code></p><p>输入如下命令，将Stable Diffusion应用克隆到刚刚打开的本地目录：</p><pre class="line-numbers language-none"><code class="language-none">git clone https:&#x2F;&#x2F;github.com&#x2F;AUTOMATIC1111&#x2F;stable-diffusion-webui<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果克隆速度很慢或连接失败，则可直接访问<a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui">https://github.com/AUTOMATIC1111/stable-diffusion-webui</a>，手动下载应用代码包并解压到本地目录。<br><br></p><h5 id="2-检查webui-user-bat"><a href="#2-检查webui-user-bat" class="headerlink" title="2. 检查webui-user.bat"></a>2. 检查webui-user.bat</h5><p>记事本打开webui-user.bat，修改Python应用程序路径为本地python.exe所在文件夹。</p><pre class="line-numbers language-none"><code class="language-none">@echo offset PYTHON&#x3D;&quot;D:\python\python.exe&quot;set GIT&#x3D;set VENV_DIR&#x3D;set COMMANDLINE_ARGS&#x3D;--xformerscall webui.bat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3-安装Stable-Diffusion"><a href="#3-安装Stable-Diffusion" class="headerlink" title="3. 安装Stable Diffusion"></a>3. 安装Stable Diffusion</h5><p>进入 stable-diffusion-webui\目录，运行webui-user.bat 它会自己安装。<br><font style="color:#FF0000;">注意：</font></p><ul><li><font style="color:#FF0000;">安装过程视网络状态可能会有多次中断（一部分模型在国外）。</font></li><li><font style="color:#FF0000;">但凡报错中断之后，只需要重新运行webui-user.bat,程序会继续安装过程。</font></li><li><font style="color:#FF0000;">一般来说，反复来个十多次很正常，请有足够耐心。</font></li></ul><p>安装完毕之后，会出现如下界面：<br><br></p><center><img src="20230409_01_img-005.png"></img></center><br><p>如果安装过程顺利，在浏览器输入红框处的地址<a href="http://127.0.0.1:7860/">http://127.0.0.1:7860</a> ，就能访问到stable diffusion的本地服务了，这时候应该能看到下面的画面。<br><br></p><center><img src="20230409_01_img-006.webp"></img></center><br><br><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a><font style="color:#0099ff;">常见问题</font></h3><h5 id="1-pip问题及处理方法"><a href="#1-pip问题及处理方法" class="headerlink" title="1. pip问题及处理方法"></a>1. pip问题及处理方法</h5><p>主要解决打包之后运行程序闪退，图片资源无法打包的问题。</p><ul><li>pip安装指令：<code>pip install pyinstaller</code></li></ul><p>如果报“’pip’ 不是内部或外部命令，也不是可运行的程序或批处理文件”，那么说明没有配置Python环境变量:</p><ul><li>右键“我的电脑——属性——高级系统设置——环境变量”。</li><li>用户变量对系统安全，但作用域只在本用户。而系统变量作用域在整个电脑，在path变量中添加python的\python\Scripts路径，因为下面有你的pip.exe，告诉cmd去哪里找pip。</li></ul><p>如果报错为：</p><pre class="line-numbers language-none"><code class="language-none">WARNING: You are using pip version 19.2.3, however version 20.2.2is available.You should consider upgradingvia the ‘python -m pip install --upgrade pip’ command.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>或者:</p><pre class="line-numbers language-none"><code class="language-none">Traceback (most recent call last):File “e:\rj\python37\lib\runpy.py”, line 193, in _run_module_as_main“main”, mod_spec)File “e:\rj\python37\lib\runpy.py”, line 85, in run_codeexec(code, run_globals)File &quot;E:\RJ\python37\Scripts\pip.exe_main.py&quot;, line 5, inModuleNotFoundError: No module named ‘pip’<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>则说明pip版本过低或者损坏，需要更新一下。</p><p>如果是<code>line4</code>报错，一般是pip版本和python版本不匹配，常在更新pip时出现，输入<code>python -m ensurepip</code>匹配正确pip版本就好。</p><p>在cmd中执行<code>pip install --upgrade pip</code>，等待pip和pyinstaller安装好即可开始使用。</p><p>更多pip问题及解决方案参考：</p><ul><li><a href="https://blog.csdn.net/qq_45508146/article/details/118913463">pip常见问题，以及Pyinstaller 打包之后运行程序闪退，图片资源无法打包的问题</a></li><li><a href="https://so.csdn.net/so/search?q=Pyinstaller&spm=1001.2101.3001.7020">Pyinstaller使用笔记</a><br><br><br></li></ul><h5 id="2-报错：Couldn’t-install-gfpgan"><a href="#2-报错：Couldn’t-install-gfpgan" class="headerlink" title="2. 报错：Couldn’t install gfpgan"></a>2. 报错：Couldn’t install gfpgan</h5><p>资源链接问题，可编辑stable-diffusion-webui文件夹中的“launch.py”，在每个资源链接前加上代理“<a href="https://ghproxy.com/%E2%80%9D">https://ghproxy.com/”</a> ，代码块如下：</p><pre class="line-numbers language-none"><code class="language-none">def prepare_environment():    global skip_install    torch_command &#x3D; os.environ.get(&#39;TORCH_COMMAND&#39;, &quot;pip install torch&#x3D;&#x3D;1.13.1+cu117 torchvision&#x3D;&#x3D;0.14.1+cu117 --extra-index-url https:&#x2F;&#x2F;download.pytorch.org&#x2F;whl&#x2F;cu117&quot;)    requirements_file &#x3D; os.environ.get(&#39;REQS_FILE&#39;, &quot;requirements_versions.txt&quot;)    xformers_package &#x3D; os.environ.get(&#39;XFORMERS_PACKAGE&#39;, &#39;xformers&#x3D;&#x3D;0.0.16rc425&#39;)    gfpgan_package &#x3D; os.environ.get(&#39;GFPGAN_PACKAGE&#39;, &quot;git+https:&#x2F;&#x2F;ghproxy.com&#x2F;https:&#x2F;&#x2F;github.com&#x2F;TencentARC&#x2F;GFPGAN.git@8d2447a2d918f8eba5a4a01463fd48e45126a379&quot;)    clip_package &#x3D; os.environ.get(&#39;CLIP_PACKAGE&#39;, &quot;git+https:&#x2F;&#x2F;ghproxy.com&#x2F;https:&#x2F;&#x2F;github.com&#x2F;openai&#x2F;CLIP.git@d50d76daa670286dd6cacf3bcd80b5e4823fc8e1&quot;)    openclip_package &#x3D; os.environ.get(&#39;OPENCLIP_PACKAGE&#39;, &quot;git+https:&#x2F;&#x2F;ghproxy.com&#x2F;https:&#x2F;&#x2F;github.com&#x2F;mlfoundations&#x2F;open_clip.git@bb6e834e9c70d9c27d0dc3ecedeebeaeb1ffad6b&quot;)    stable_diffusion_repo &#x3D; os.environ.get(&#39;STABLE_DIFFUSION_REPO&#39;, &quot;https:&#x2F;&#x2F;ghproxy.com&#x2F;https:&#x2F;&#x2F;github.com&#x2F;Stability-AI&#x2F;stablediffusion.git&quot;)    taming_transformers_repo &#x3D; os.environ.get(&#39;TAMING_TRANSFORMERS_REPO&#39;, &quot;https:&#x2F;&#x2F;ghproxy.com&#x2F;https:&#x2F;&#x2F;github.com&#x2F;CompVis&#x2F;taming-transformers.git&quot;)    k_diffusion_repo &#x3D; os.environ.get(&#39;K_DIFFUSION_REPO&#39;, &#39;https:&#x2F;&#x2F;ghproxy.com&#x2F;https:&#x2F;&#x2F;github.com&#x2F;crowsonkb&#x2F;k-diffusion.git&#39;)    codeformer_repo &#x3D; os.environ.get(&#39;CODEFORMER_REPO&#39;, &#39;https:&#x2F;&#x2F;ghproxy.com&#x2F;https:&#x2F;&#x2F;github.com&#x2F;sczhou&#x2F;CodeFormer.git&#39;)    blip_repo &#x3D; os.environ.get(&#39;BLIP_REPO&#39;, &#39;https:&#x2F;&#x2F;ghproxy.com&#x2F;https:&#x2F;&#x2F;github.com&#x2F;salesforce&#x2F;BLIP.git&#39;)    stable_diffusion_commit_hash &#x3D; os.environ.get(&#39;STABLE_DIFFUSION_COMMIT_HASH&#39;, &quot;47b6b607fdd31875c9279cd2f4f16b92e4ea958e&quot;)    taming_transformers_commit_hash &#x3D; os.environ.get(&#39;TAMING_TRANSFORMERS_COMMIT_HASH&#39;, &quot;24268930bf1dce879235a7fddd0b2355b84d7ea6&quot;)    k_diffusion_commit_hash &#x3D; os.environ.get(&#39;K_DIFFUSION_COMMIT_HASH&#39;, &quot;5b3af030dd83e0297272d861c19477735d0317ec&quot;)    codeformer_commit_hash &#x3D; os.environ.get(&#39;CODEFORMER_COMMIT_HASH&#39;, &quot;c5b4593074ba6214284d6acd5f1719b6c5d739af&quot;)    blip_commit_hash &#x3D; os.environ.get(&#39;BLIP_COMMIT_HASH&#39;, &quot;48211a1594f1321b00f14c9f7a5b4813144b2fb9&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><br><h5 id="3-报错：No-module-‘xformers’-Proceeding-without-it"><a href="#3-报错：No-module-‘xformers’-Proceeding-without-it" class="headerlink" title="3. 报错：No module ‘xformers’. Proceeding without it."></a>3. 报错：No module ‘xformers’. Proceeding without it.</h5><p>编辑stable-diffusion-webui目录中的“webui-user.bat”文件，添加–xformers参数，如下：</p><pre class="line-numbers language-none"><code class="language-none">set COMMANDLINE_ARGS&#x3D;--xformers<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><h5 id="4-报错：modulenotfounderror"><a href="#4-报错：modulenotfounderror" class="headerlink" title="4. 报错：modulenotfounderror"></a>4. 报错：modulenotfounderror</h5><p>若报错信息为：</p><pre class="line-numbers language-none"><code class="language-none">modulenotfounderror: no module named &#39;font_roboto&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>则用Everything搜索roboto,然后把图中这三个文件删除（或者把所有搜索到的roboto字体全删除）<br><br></p><center><img src="20230409_01_img-007.webp"></img></center><br><br><br><h3 id="要点总结"><a href="#要点总结" class="headerlink" title="要点总结"></a><font style="color:#0099ff;">要点总结</font></h3><h5 id="关于安装Stable-Diffusion"><a href="#关于安装Stable-Diffusion" class="headerlink" title="关于安装Stable Diffusion"></a>关于安装Stable Diffusion</h5><ol><li>从原版仅支持6G显存以上显卡优化到目前仅仅需要4G显存的显卡（理论上甚至仅用CPU都可以跑，速度很慢，不推荐）。</li><li>Stable Diffusion的安装整体不难，但也有点考验外网的连通性。好用的通道是前提。</li><li>需要大量安装各种python库，可以考虑设置PIP国内源。</li><li>安装目录尽可能不要放在C盘，安装位置要留出足够的空间，建议50GB以上。<br><br></li></ol><h5 id="资源链接"><a href="#资源链接" class="headerlink" title="资源链接"></a>资源链接</h5><p>元素法典制作委员会：<a href="https://space.bilibili.com/1981251194">https://space.bilibili.com/1981251194</a><br>Controlnet-models：<a href="https://huggingface.co/Hetaneko/Controlnet-models/tree/main/controlnet_safetensors">https://huggingface.co/Hetaneko/Controlnet-models/</a><br>PromptHero：<a href="https://prompthero.com/">https://prompthero.com/</a><br>Civitai：<a href="https://civitai.com/">https://civitai.com/</a><br>Lexica：<a href="https://lexica.art/">https://lexica.art/</a><br><br><br><br></p>]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;
&lt;p&gt;在自己的电脑上部署运行Stable Diffusion，实现AI &lt;del&gt;定制可爱的小姐姐&lt;/del&gt; 生成图片。&lt;/p&gt;
&lt;!-- more --&gt;</summary>
    
    
    
    
    <category term="瞎折腾" scheme="http://chenzp.top/tags/%E7%9E%8E%E6%8A%98%E8%85%BE/"/>
    
    <category term="AI" scheme="http://chenzp.top/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>辞旧迎新的开篇</title>
    <link href="http://chenzp.top/2023/04/06/%E8%BE%9E%E6%97%A7%E8%BF%8E%E6%96%B0%E7%9A%84%E5%BC%80%E7%AF%87/"/>
    <id>http://chenzp.top/2023/04/06/%E8%BE%9E%E6%97%A7%E8%BF%8E%E6%96%B0%E7%9A%84%E5%BC%80%E7%AF%87/</id>
    <published>2023-04-06T12:28:18.000Z</published>
    <updated>2023-04-11T06:14:04.969Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><br><blockquote><p> 我终于有空搞搞自己的博客了。</p></blockquote><br><p><img src="/2023/04/06/%E8%BE%9E%E6%97%A7%E8%BF%8E%E6%96%B0%E7%9A%84%E5%BC%80%E7%AF%87/01.png"><br>&emsp;&emsp;搞个人博客是我的一个夙愿。<br>&emsp;&emsp;但由于各种的拖延症晚期表征（比如懒），导致最终都没能落地。<br>&emsp;&emsp;今年我把坚持写文章作为最重要的个人年度项目。<br>&emsp;&emsp;除整合曾经发表过的文章之外，再继续原创关于设计与技术的文章。<br>&emsp;&emsp;（当然，缩短发布周期是亟待解决的重中之重）<br>&emsp;&emsp;……</p><p>&emsp;&emsp;魔幻的2022年刚刚过去不久，充满未知的2023年即将过去三分之一。<br>&emsp;&emsp;自2019年起，疫情肆虐让我们生活的这个世界完全改变了。<br>&emsp;&emsp;之后的三年好似白驹过隙，而过去的种种仿佛都变成了前世的记忆。<br>&emsp;&emsp;出门戴口罩、每隔三天的小棉棒刮喉咙，以及对绿色二维码的偏爱。<br>&emsp;&emsp;从居家隔离、无接触配送、到被感染再隔离。<br>&emsp;&emsp;我们似乎习惯了疫情之下的生活。</p><p>&emsp;&emsp;那些愤怒、恐惧与混乱，使我不禁联想起上个世纪20年代的世界。<br>&emsp;&emsp;生逢乱世的先辈们是否也曾同样充满迷茫、彷徨与无可奈何？</p><p>&emsp;&emsp;有人说，那是属于现代人的黄金时代。<br>&emsp;&emsp;它为身处混沌的人类照亮方向，更诞生了无数影响深远的大家。<br>&emsp;&emsp;也有人说，这是属于当代人的黄金时代。<br>&emsp;&emsp;它日新月异，饱含风险与机遇，同时也充满未知与挑战。</p><p>&emsp;&emsp;我们无法选择自己出生的时代，但可以选择活在当下的方式。<br>&emsp;&emsp;假如人生唯有盖棺方能定论，那么重要的便是活着的过程。<br>&emsp;&emsp;不断地探索与尝试，经历失败与挫折的洗礼。<br>&emsp;&emsp;如此，最终功成与否似乎都不再重要了。<br>&emsp;&emsp;……</p><p>&emsp;&emsp;也许走出阴霾的最优解，就是选择相信。<br>&emsp;&emsp;相信光明，必将到来。</p><p>&emsp;&emsp;那么就在这2023的开端，祝自己好运，也祝各位好运。</p><br><br><!-- excerpt -->]]></content>
    
    
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;
&lt;p&gt;告别魔幻的2022，迎接七成新的2023以及充满未知的将来。&lt;/p&gt;
&lt;!-- more --&gt;</summary>
    
    
    
    
    <category term="杂文" scheme="http://chenzp.top/tags/%E6%9D%82%E6%96%87/"/>
    
  </entry>
  
</feed>
